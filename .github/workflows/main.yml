# Adapted from GitHub Actions MWE for Docker containers
# https://docs.github.com/en/actions/creating-actions/creating-a-docker-container-action
# Started as main.yml in root folder

on:
  push:
    branches: [ greetings ]

jobs:
  hello_mona_job:
    runs-on: ubuntu-latest
    name: A job to say hello
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Hello world action step
      id: hello
      uses: ./.github/actions
      # uses: ./entrypoint.sh
      with:
        who-to-greet: 'Mona...the Octocat'
    # Use the output from the `hello` step
    - name: Get the output time
      run: echo "The time was ${{ steps.hello.outputs.time }}"

  hello_private_job:
    runs-on: ubuntu-latest
    name: A private job to say hello
    steps:
      # To use this repository's private action,
      # you must check out the repository
      - name: Checkout
        uses: actions/checkout@v2
      - name: Hello world action step
        # uses: ./action.yml  # Uses an action in the root directory
        # Error: Can't find 'action.yml', 'action.yaml' or 'Dockerfile' under '/home/runner/work/w241_autograder/w241_autograder/action.yml'. Did you forget to run actions/checkout before running your local action?
        # uses: ./  # Uses an action in the root directory
        # Error: File not found: '/home/runner/work/w241_autograder/w241_autograder/./Dockerfile'
        # uses: ../Dockerfile  # Uses an action in the root directory
        # The workflow is not valid. .github/workflows/main.yml (Line: 18, Col: 13): Expected format {org}/{repo}[/path]@ref. Actual '../Dockerfile' Input string was not in a correct format.
        uses: ./.github/actions/action.yml
        id: hello
        with:
          who-to-greet: 'Private Pyle'
      # Use the output from the `hello` step
      - name: Get the output time
        run: echo "The time was ${{ steps.hello.outputs.time }}"

# name: R

# on:
#   push:
#     branches: [ submission ]
#   pull_request:
#     branches: [ submission ]

# jobs:
#   build:
#     runs-on: macOS-latest
#     strategy:
#       matrix:
#         r-version: [3.5]

#     steps:
#       - run: echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV
#       - uses: actions/checkout@v2
#       - name: Set up R ${{ matrix.r-version }}
#         uses: r-lib/actions/setup-r@ffe45a39586f073cc2e9af79c4ba563b657dc6e3
#         with:
#           r-version: ${{ matrix.r-version }}
# #Consider moving the package installs to the docker creation
#       - name: Install gapminder
#         run: install.packages("gapminder")
#         shell: Rscript {0}
# #Consider copying the files from a separate github that the docker instance has access to
# #This step also needs to grab the student's code
#       - name: copy files
#         run: sudo cp R_checker.R /Users/Shared/R_checker.R
#         shell: bash
#       - name: Run a Script
#         run: Rscript /Users/Shared/R_checker.R